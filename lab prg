abstract class Employee{
    String name;
    int empId;
    double basicSalary;
 public Employee(String name,int empId,double basicSalary)
    {
       this.name=name;
       this.empId=empId;
       this.basicSalary=basicSalary;
    }
     abstract double calculateSalary();
     public void displaySalaryDetails(){
           System.out.println("Employee ID:"+empId);
           System.out.println("Name:"+name);
           System.out.println("Salary:$"+calculateSalary());
           System.out.println("-----------------------------");
      }
  }
 class FullTimeEmployee extends Employee{
      public FullTimeEmployee (String name,int empId,double basicSalary)
      {
         super(name,empId,basicSalary);
      }
      @Override
      double calculateSalary(){
          return basicSalary+(0.2*basicSalary);
      }
 }

 class partTimeEmployee extends Employee{
         private double hourlyRate;
         private int hoursWorked;
     public partTimeEmployee(String name,int empId,double basicSalary,int hourlyRate,int hoursWorked)
        {
           super(name,empId,basicSalary);
           this.hourlyRate=hourlyRate;
           this.hoursWorked=hoursWorked;
     }

    public partTimeEmployee(String name, int empId, double basicSalary) {
        super(name, empId, basicSalary);
    }
         @SuppressWarnings("override")
     double calculateSalary(){
           return basicSalary+(hourlyRate*hoursWorked);
           }
     }
      public class EmployeeManagementSystem{
     public static void main(String[] args){
           Employee emp1=new FullTimeEmployee("Alice",101,5000);
           Employee emp2=new partTimeEmployee("bob",102,2000,20,15);
           emp1.displaySalaryDetails();
           emp2.displaySalaryDetails();
       }
     } 
